events {}

http {
    include /etc/nginx/mime.types;

    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        listen [::]:80;
        server_name symphoney.xyz www.symphoney.xyz;

        # Redirect all HTTP requests to HTTPS
        return 301 https://$host$request_uri;
    }

    # Serve frontend web app over HTTPS
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name symphoney.xyz www.symphoney.xyz;

        # Path to your Let's Encrypt certificate and private key
        ssl_certificate /etc/letsencrypt/live/symphoney.xyz/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/symphoney.xyz/privkey.pem;

        # SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        # Security headers
        add_header X-Frame-Options "DENY";
        add_header X-Content-Type-Options "nosniff";
        add_header Referrer-Policy "strict-origin-when-cross-origin";
        # add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self'; img-src 'self' data:; font-src 'self'; connect-src 'self'; frame-ancestors 'none';";

        root /app;
        index index.html;

        location / {
            try_files $uri $uri/ /index.html;

            # Websocket
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, no-transform";
        }
    }
}